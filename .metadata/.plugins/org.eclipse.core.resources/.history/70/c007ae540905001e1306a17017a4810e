package com.rubypaper.controller;

import java.util.Date;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RestController;

import com.rubypaper.domain.BoardVO;

//해당 class를 scanning해서 인스턴스 생성 -> container에 저장 ; RestController annotation의 역할

@RestController // 어노테이션 사용 ; @Controller & @RestController
public class BoardController {// extend로 class 상속받지 않음
	public BoardController() {
		System.out.println("=".repeat(50));
		System.out.println("Board Controller가 생성되었습니다.");
		System.out.println("=".repeat(50));
	}

	//boot가 객체를 생성해줌
	@GetMapping("/hello")
	public String hello1(String name) {
		return "get Hello ; " + name;
	}

	@PostMapping("/hello")
	public String hello2(String name) {
		return " Post Hello ; " + name;
	}
	
	@PutMapping("/hello")
	public String hello3(String name) {
		return "Put Hello ; " + name;
	}
	
	@DeleteMapping("/hello")
	public String hello4(String name) {
		return "Delete Hello ; " + name;
	}
	
	@GetMapping("/getBoard")
	public BoardVO getBoard() {
		BoardVO board = new BoardVO(1,"title","tester","내용",new Date(),0);

		return board;
		
		
	}
}
